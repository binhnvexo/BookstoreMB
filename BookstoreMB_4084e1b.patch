commit 4084e1bc1ad369d21c49097295fdb1c19b4efef5
Author: BinhNV <binhnv@exoplatform.com>
Date:   Wed Aug 1 18:32:53 2012 +0700

    commit code with search section

diff --git a/bin/BookstoreMB.apk b/bin/BookstoreMB.apk
index 4f89595..e4e6f56 100644
Binary files a/bin/BookstoreMB.apk and b/bin/BookstoreMB.apk differ
diff --git a/bin/classes.dex b/bin/classes.dex
index eefea52..e3a5127 100644
Binary files a/bin/classes.dex and b/bin/classes.dex differ
diff --git a/bin/classes/com/example/bookstoremb/MainActivity.class b/bin/classes/com/example/bookstoremb/MainActivity.class
index c115f74..e532ad2 100644
Binary files a/bin/classes/com/example/bookstoremb/MainActivity.class and b/bin/classes/com/example/bookstoremb/MainActivity.class differ
diff --git a/bin/classes/com/example/bookstoremb/R$id.class b/bin/classes/com/example/bookstoremb/R$id.class
index d6f4c79..1fb355c 100644
Binary files a/bin/classes/com/example/bookstoremb/R$id.class and b/bin/classes/com/example/bookstoremb/R$id.class differ
diff --git a/bin/classes/com/example/bookstoremb/R$layout.class b/bin/classes/com/example/bookstoremb/R$layout.class
index 7211d40..322e42e 100644
Binary files a/bin/classes/com/example/bookstoremb/R$layout.class and b/bin/classes/com/example/bookstoremb/R$layout.class differ
diff --git a/bin/classes/com/example/bookstoremb/R$menu.class b/bin/classes/com/example/bookstoremb/R$menu.class
index ba63f76..0d9b114 100644
Binary files a/bin/classes/com/example/bookstoremb/R$menu.class and b/bin/classes/com/example/bookstoremb/R$menu.class differ
diff --git a/bin/classes/com/example/bookstoremb/R$string.class b/bin/classes/com/example/bookstoremb/R$string.class
index 7a359d4..a3bf75f 100644
Binary files a/bin/classes/com/example/bookstoremb/R$string.class and b/bin/classes/com/example/bookstoremb/R$string.class differ
diff --git a/bin/classes/com/example/bookstoremb/R$style.class b/bin/classes/com/example/bookstoremb/R$style.class
index b565f76..caf95d2 100644
Binary files a/bin/classes/com/example/bookstoremb/R$style.class and b/bin/classes/com/example/bookstoremb/R$style.class differ
diff --git a/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter$ViewHolder.class b/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter$ViewHolder.class
index f749118..bf77041 100644
Binary files a/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter$ViewHolder.class and b/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter$ViewHolder.class differ
diff --git a/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter.class b/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter.class
index f26b371..0252c36 100644
Binary files a/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter.class and b/bin/classes/com/example/bookstoremb/adapter/BookstoreAdapter.class differ
diff --git a/bin/jarlist.cache b/bin/jarlist.cache
deleted file mode 100644
index 1b5ec3f..0000000
--- a/bin/jarlist.cache
+++ /dev/null
@@ -1,3 +0,0 @@
-# cache for current jar dependecy. DO NOT EDIT.
-# format is <lastModified> <length> <SHA-1> <path>
-# Encoding is UTF-8
diff --git a/bin/resources.ap_ b/bin/resources.ap_
index 66c339c..a368828 100644
Binary files a/bin/resources.ap_ and b/bin/resources.ap_ differ
diff --git a/gen/com/example/bookstoremb/R.java b/gen/com/example/bookstoremb/R.java
index 7cb041b..c62a67e 100644
--- a/gen/com/example/bookstoremb/R.java
+++ b/gen/com/example/bookstoremb/R.java
@@ -32,15 +32,17 @@ public final class R {
         public static final int ic_launcher=0x7f020009;
     }
     public static final class id {
-        public static final int arrow=0x7f090008;
+        public static final int arrow=0x7f09000a;
         public static final int author=0x7f090002;
+        public static final int bookName=0x7f090006;
+        public static final int btnReturn=0x7f090005;
         public static final int category=0x7f090001;
         public static final int content=0x7f090003;
-        public static final int icon=0x7f090006;
-        public static final int label=0x7f090007;
-        public static final int list_row=0x7f090005;
+        public static final int icon=0x7f090008;
+        public static final int label=0x7f090009;
+        public static final int list_row=0x7f090007;
         public static final int main=0x7f090004;
-        public static final int menu_settings=0x7f090009;
+        public static final int menu_settings=0x7f09000b;
         public static final int name=0x7f090000;
     }
     public static final class layout {
@@ -54,13 +56,17 @@ public final class R {
     }
     public static final class string {
         public static final int app_name=0x7f060000;
+        public static final int btncancel=0x7f060009;
+        public static final int btnsearch=0x7f060008;
         public static final int hello_world=0x7f060001;
+        public static final int hint=0x7f06000a;
         public static final int menu_back=0x7f060005;
         public static final int menu_close=0x7f060004;
         public static final int menu_search=0x7f060006;
         public static final int menu_settings=0x7f060002;
-        public static final int nocontent=0x7f060007;
+        public static final int nocontent=0x7f06000b;
         public static final int title_activity_main=0x7f060003;
+        public static final int tltsearch=0x7f060007;
     }
     public static final class style {
         public static final int AppTheme=0x7f070000;
diff --git a/res/layout/activity_main.xml b/res/layout/activity_main.xml
index 0c18b4c..a3cf3d3 100644
--- a/res/layout/activity_main.xml
+++ b/res/layout/activity_main.xml
@@ -5,11 +5,16 @@
     android:orientation="vertical"
     android:background="@drawable/custombitmap"
     android:id="@+id/main">
+
+    <Button android:id="@+id/btnReturn"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/btncancel"/>
     
     <ListView
         android:id="@android:id/list"
         android:layout_width="wrap_content"
-        android:layout_height="fill_parent"
+        android:layout_height="wrap_content"
         android:drawSelectorOnTop="false"
         android:layout_marginLeft="13px"
 		android:layout_marginTop="24px"
@@ -17,5 +22,5 @@
 		android:layout_marginBottom="24px"
 		android:dividerHeight="-2dip">
 	</ListView>
-        
+	
 </LinearLayout>
diff --git a/res/layout/activity_search.xml b/res/layout/activity_search.xml
index ce49031..ff334b6 100644
--- a/res/layout/activity_search.xml
+++ b/res/layout/activity_search.xml
@@ -1,7 +1,12 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content">
     
+    <EditText android:id="@+id/bookName"
+        android:layout_width="fill_parent"
+        android:layout_height="50dip"
+        android:hint="@string/hint">
+    </EditText>
 
 </RelativeLayout>
\ No newline at end of file
diff --git a/res/values/strings.xml b/res/values/strings.xml
index bc23f1b..11cd91f 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -7,6 +7,10 @@
     <string name="menu_close">CLOSE</string>
     <string name="menu_back">BACK</string>
     <string name="menu_search">SEARCH</string>
+    <string name="tltsearch">SEARCH BOOK</string>
+    <string name="btnsearch">SEARCH</string>
+    <string name="btncancel">CANCEL</string>
+    <string name="hint">Book name</string>
     <string name="nocontent">No book avaialbe now</string>
 
 </resources>
\ No newline at end of file
diff --git a/src/com/example/bookstoremb/MainActivity.java b/src/com/example/bookstoremb/MainActivity.java
index 37ba3c8..afbdf98 100644
--- a/src/com/example/bookstoremb/MainActivity.java
+++ b/src/com/example/bookstoremb/MainActivity.java
@@ -4,20 +4,23 @@ import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.List;
 
-import org.apache.http.conn.routing.RouteInfo.TunnelType;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import android.R.layout;
+import android.app.AlertDialog;
 import android.app.ListActivity;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.DialogInterface.OnClickListener;
 import android.content.Intent;
 import android.os.Bundle;
+import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup.LayoutParams;
-import android.widget.ArrayAdapter;
+import android.widget.Button;
 import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.TextView;
@@ -27,51 +30,73 @@ import com.example.bookstoremb.models.Book;
 import com.example.bookstoremb.utils.Constants;
 import com.example.bookstoremb.utils.RestClient;
 import com.example.bookstoremb.utils.Utils;
+import com.example.bookstoremb.wrapper.SearchWrapper;
 
 public class MainActivity extends ListActivity {
 
     TextView selection;
     String[] items = {};
     String SEARCH_ALL_BOOK_URL = "http://192.168.1.130:8080/rest/private/bookstore/searchAllBook";
+    String SEARCH_BOOK_BY_NAME = "http://192.168.1.130:8080/rest/private/bookstore/searchBookByName/";
     String result;
     List<Book> books;
+    Button btnReturn;
     
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        BookstoreAdapter adapter;
+        LinearLayout main = (LinearLayout) findViewById(R.id.main);
+        btnReturn = (Button) findViewById(R.id.btnReturn);
         books = new ArrayList<Book>();
+        Bundle extras = getIntent().getExtras();
         try {
-          RestClient rest = new RestClient(SEARCH_ALL_BOOK_URL);
-          rest.execute(RestClient.RequestMethod.GET);
-          if (rest.getResponseCode() == 200) {
-            JSONArray jsons = (JSONArray) new JSONArray(rest.getResponseStr());
-            for (int i = 0; i < jsons.length(); i++) {
-              JSONObject json = jsons.getJSONObject(i);
-              Book book = Utils.createBookFromJSON(json);
-              books.add(book);
-              
-            }
-            adapter = new BookstoreAdapter(this, books);
-            this.setListAdapter(adapter);
+          if (extras == null) {
+            main.removeView(btnReturn);
+            renderList(SEARCH_ALL_BOOK_URL);
           } else {
-            adapter = new BookstoreAdapter(this, books);
-            this.setListAdapter(adapter);
-            LinearLayout main = (LinearLayout) findViewById(R.id.main);
-            TextView nocontent = new TextView(this);
-            nocontent.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
-            nocontent.setText(R.string.nocontent);
-            main.removeAllViews();
-            main.addView(nocontent);
+            String bookName = extras.getString(Constants.BOOK_NAME);
+            if (bookName == null || "".equals(bookName)) {
+              main.removeView(btnReturn);
+              renderList(SEARCH_ALL_BOOK_URL);
+            } else {
+              renderList(SEARCH_BOOK_BY_NAME + bookName.replaceAll(" ", ""));
+            }
           }
-        } catch (JSONException jse) {
-          jse.printStackTrace();
-        } catch (UnsupportedEncodingException ue) {
-          ue.printStackTrace();
+        } catch (UnsupportedEncodingException e) {
+          e.printStackTrace();
+        } catch (JSONException e) {
+          e.printStackTrace();
         }
+        
     }
 
+    private void renderList(String url) throws JSONException, UnsupportedEncodingException {
+      BookstoreAdapter adapter;
+      RestClient rest = new RestClient(url);
+      rest.execute(RestClient.RequestMethod.GET);
+      if (rest.getResponseCode() == 200) {
+        JSONArray jsons = (JSONArray) new JSONArray(rest.getResponseStr());
+        for (int i = 0; i < jsons.length(); i++) {
+          JSONObject json = jsons.getJSONObject(i);
+          Book book = Utils.createBookFromJSON(json);
+          books.add(book);
+        }
+        adapter = new BookstoreAdapter(this, books);
+        this.setListAdapter(adapter);
+      } else {
+        adapter = new BookstoreAdapter(this, books);
+        this.setListAdapter(adapter);
+        LinearLayout main = (LinearLayout) findViewById(R.id.main);
+        TextView nocontent = new TextView(this);
+        nocontent.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
+        nocontent.setText(R.string.nocontent);
+        main.removeAllViews();
+        main.addView(btnReturn);
+        main.addView(nocontent);
+      }
+    }
+    
     /* (non-Javadoc)
      * @see android.app.ListActivity#onListItemClick(android.widget.ListView, android.view.View, int, long)
      */
@@ -110,6 +135,31 @@ public class MainActivity extends ListActivity {
         finish();
         break;
       case Constants.MENU_SEARCH:
+        LayoutInflater inflater = LayoutInflater.from(this);
+        View searchView = inflater.inflate(R.layout.activity_search, null);
+        final SearchWrapper wrapper = new SearchWrapper(searchView, this);
+        final Context nestContext = this;
+        new AlertDialog.Builder(this).setTitle(R.string.tltsearch)
+                                   .setView(searchView)
+                                   .setPositiveButton(R.string.btnsearch, new OnClickListener() {
+
+                                     @Override
+                                     public void onClick(DialogInterface dialog, int which) {
+                                       String bookName = wrapper.getBookNameStr();
+                                       Intent intent = new Intent(nestContext, MainActivity.class);
+                                       intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                                       intent.putExtra(Constants.BOOK_NAME, bookName);
+                                       startActivity(intent);
+                                     }
+                                   })
+                                   .setNegativeButton(R.string.btncancel, new OnClickListener() {
+
+                                     @Override
+                                     public void onClick(DialogInterface dialog, int which) {
+
+                                     }
+                                   })
+                                   .show();
         break;
       }
       return super.onMenuItemSelected(featureId, item);
diff --git a/src/com/example/bookstoremb/adapter/BookstoreAdapter.java b/src/com/example/bookstoremb/adapter/BookstoreAdapter.java
index 3a1c628..b049657 100644
--- a/src/com/example/bookstoremb/adapter/BookstoreAdapter.java
+++ b/src/com/example/bookstoremb/adapter/BookstoreAdapter.java
@@ -19,6 +19,7 @@ package com.example.bookstoremb.adapter;
 import java.util.ArrayList;
 import java.util.List;
 
+import android.content.Context;
 import android.graphics.Color;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -39,17 +40,17 @@ import com.example.bookstoremb.models.Book;
  */
 public class BookstoreAdapter extends BaseAdapter {
 
-  private MainActivity activity;
+  private Context context;
   private List<Book> arr = new ArrayList<Book>();
   private static LayoutInflater inflater;
   
   /**
    * 
    */
-  public BookstoreAdapter(MainActivity activity, List<Book> arr) {
-    this.activity = activity;
+  public BookstoreAdapter(Context context, List<Book> arr) {
+    this.context = context;
     this.arr = arr;
-    inflater = LayoutInflater.from(activity);
+    inflater = LayoutInflater.from(context);
   }
 
   /* (non-Javadoc)
diff --git a/src/com/example/bookstoremb/wrapper/SearchWrapper.java b/src/com/example/bookstoremb/wrapper/SearchWrapper.java
new file mode 100644
index 0000000..97447e7
--- /dev/null
+++ b/src/com/example/bookstoremb/wrapper/SearchWrapper.java
@@ -0,0 +1,73 @@
+/*
+ * Copyright (C) 2003-2012 eXo Platform SAS.
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+package com.example.bookstoremb.wrapper;
+
+import com.example.bookstoremb.R;
+
+import android.content.Context;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemSelectedListener;
+import android.widget.TextView;
+
+/**
+ * Created by The eXo Platform SAS
+ * Author : BinhNV
+ *          binhnv@exoplatform.com
+ * Aug 1, 2012  
+ */
+public class SearchWrapper implements OnItemSelectedListener {
+
+  private View base;
+  private TextView bookName;
+  private String bookNameStr;
+  
+  /**
+   * 
+   */
+  public SearchWrapper(View base, Context context) {
+    this.base = base;
+    bookName = (TextView) base.findViewById(R.id.bookName);
+  }
+
+  /* (non-Javadoc)
+   * @see android.widget.AdapterView.OnItemSelectedListener#onItemSelected(android.widget.AdapterView, android.view.View, int, long)
+   */
+  @Override
+  public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
+
+  }
+
+  /* (non-Javadoc)
+   * @see android.widget.AdapterView.OnItemSelectedListener#onNothingSelected(android.widget.AdapterView)
+   */
+  @Override
+  public void onNothingSelected(AdapterView<?> arg0) {
+    
+  }
+
+  /**
+   * @return the bookNameStr
+   */
+  public String getBookNameStr() {
+    if (bookNameStr == null) {
+      bookNameStr = bookName.getText().toString();
+    }
+    return bookNameStr;
+  }
+
+}
